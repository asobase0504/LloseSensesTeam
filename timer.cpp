//==================================================
// score.cpp
// Author: Buriya Kota
//==================================================

//**************************************************
// include
//**************************************************
#include "manager.h"
#include "timer.h"
#include "number.h"

//**************************************************
// 静的メンバ変数
//**************************************************

//--------------------------------------------------
// コンストラクタ
//--------------------------------------------------
CTime::CTime(int nPriority /* =4 */) : CObject(nPriority)
{
	m_nTime = 0;
	SetType(TYPE_SCORE);
}

//--------------------------------------------------
// デストラクタ
//--------------------------------------------------
CTime::~CTime()
{
}

//--------------------------------------------------
// 初期化
//--------------------------------------------------
HRESULT CTime::Init()
{
	return S_OK;
}

//--------------------------------------------------
// 初期化
//--------------------------------------------------
HRESULT CTime::Init(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	m_nTime = 0;
	m_isStart = false;

	return S_OK;
}

//--------------------------------------------------
// 終了
//--------------------------------------------------
void CTime::Uninit()
{
	CObject::DeletedObj();
}

void CTime::Update()
{
	if (m_isStart)
	{
		AddTime();
	}
}

//--------------------------------------------------
// 位置の設定と大きさの設定
//--------------------------------------------------
void CTime::SetPos(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
}

//--------------------------------------------------
// タイマースタート
//--------------------------------------------------
void CTime::Start()
{
	m_nTime = timeGetTime();
	m_isStart = true;
}

//--------------------------------------------------
// タイマーエンド
//--------------------------------------------------
int CTime::End()
{
	m_isStart = false;
	return m_nTime;
}

//--------------------------------------------------
// スコアの設定
//--------------------------------------------------
void CTime::SetTime(int nTime)
{
	int score = nTime;
}

//--------------------------------------------------
// 生成
//--------------------------------------------------
CTime *CTime::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	CTime *pTime;
	pTime = new CTime;

	if (pTime != nullptr)
	{
		pTime->Init(pos, size);
	}
	else
	{
		assert(false);
	}

	return pTime;
}
